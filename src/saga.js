import { call, put, takeLatest, takeEvery, take, cancel } from 'redux-saga/effects';
import * as types from './constants';
import { getWallMartData } from './api';

function* getData({locationId, sku}){
  try{
    console.log("location", locationId, sku)
    const response = yield call(getWallMartData, locationId, sku);
    console.log("response", response);
     // const response = '{"archived": 0, "availability": 1, "location_code": "4706", "location_id": 178, "merchant_id": "2f9b7c67-7c32-4267-9132-abb503dc4c83", "price": {"quantity_1": {"mrp": {"api": 34.0, "cassandra": 34.0, "cassandra_updated_on": "2018-05-02 16:45:42", "file_dump": "34", "file_updated_on": "2018-05-02 06:56:36", "master": 34.0, "master_updated_on": "2018-05-02 16:45:39", "solr": 34.0, "uploaded": null, "uploaded_task_id": null, "uploaded_task_status": null, "uploaded_updated_on": null}, "price_list_in_location_defined": true, "webprice": {"api": 30.9, "cassandra": 30.899999618530273, "cassandra_updated_on": "2018-05-02 16:45:42", "file_dump": "30.9", "file_updated_on": "2018-05-02 06:56:36", "master": 30.9, "master_updated_on": "2018-05-02 16:45:39", "solr": 30.9, "uploaded": null, "uploaded_task_id": null, "uploaded_task_status": null, "uploaded_updated_on": null}}, "quantity_12": {"mrp": {"cassandra": 34.0, "cassandra_updated_on": "2018-04-27 14:45:30", "file_dump": "34.00", "file_updated_on": "2018-05-02 15:41:20", "master": 34.0, "master_updated_on": "2018-05-02 16:45:39", "uploaded": null, "uploaded_task_id": null, "uploaded_task_status": null, "uploaded_updated_on": null}, "price_list_in_location_defined": true, "webprice": {"api": 29.97, "cassandra": 29.969999313354492, "cassandra_updated_on": "2018-04-27 14:45:30", "file_dump": "29.97", "file_updated_on": "2018-05-02 15:41:20", "master": 29.97, "master_updated_on": "2018-05-02 16:45:39", "uploaded": null, "uploaded_task_id": null, "uploaded_task_status": null, "uploaded_updated_on": null}}, "quantity_6": {"mrp": {"cassandra": 34.0, "cassandra_updated_on": "2018-04-27 14:45:30", "file_dump": "34.00", "file_updated_on": "2018-05-02 15:41:20", "master": 34.0, "master_updated_on": "2018-05-02 16:45:39", "uploaded": null, "uploaded_task_id": null, "uploaded_task_status": null, "uploaded_updated_on": null}, "price_list_in_location_defined": true, "webprice": {"api": 30.28, "cassandra": 30.280000686645508, "cassandra_updated_on": "2018-04-27 14:45:30", "file_dump": "30.28", "file_updated_on": "2018-05-02 15:41:20", "master": 30.28, "master_updated_on": "2018-05-02 16:45:39", "uploaded": null, "uploaded_task_id": null, "uploaded_task_status": null, "uploaded_updated_on": null}}}, "product_id": 211104, "sku": "50718", "stock": {"api": 4133, "cassandra": 4133, "cassandra_updated_on": "2018-05-02 16:35:52", "file_dump": "4133", "file_dump_time": "2018-05-02 16:35:25", "master": 4133, "master_updated_on": "2018-05-02 16:35:52", "solr": 4133, "uploaded": "4133", "uploaded_task_id": 52576, "uploaded_task_status": "C", "uploaded_updated_on": "2018-05-02 16:35:38"}, "tags": "Monsoon,EOSS,EOSS,Royal751,Royal751,Premium251,Super101-250,Super101-250,Super101-250,Super101-250,Premium251,Diamond1001,Super101-250,Diamond1001,Diamond1001,Diamond1001,Platinum2000,Platinum2000,Diamond1001,Diamond1001,Royal751,Diamond1001,Platinum2000,Platinum2000,Platinum2000,Diamond1001,Platinum2000,Platinum2000,Grand501,Diamond1001,Platinum2000,Diamond1001,Diamond1001,Royal751,Royal751,Diamond1001,Royal751,Super101-250,Diamond1001,Royal751,Diamond1001,Diamond1001,Grand501,Diamond1001,Diamond1001,Diamond1001,Diamond1001,Diamond1001,Diamond1001,Diamond1001,Platinum2000,Platinum2000,Platinum2000,Super101-250,Super101-250,Classic100,Classic100,Grand501,Platinum2000,Deal5,Harpic,DiwaliSO,DiwaliSO,DiwaliSO,BSNavigation,Imported,Imported,Imported,Imported,Imported,Imported,Imported,Imported,Imported,Imported,Imported,Imported,Imported,Imported,Imported,Imported,Imported,Imported,Imported,Imported,Imported,Imported,Imported,Imported,Imported,BumperDeals,Imported,Imported,Imported,Imported,Imported,Imported,Impo"}';
    // console.log("hello:",response);
    yield put({type: types.REQUEST_WALLMART_DATA_SUCCESS, response});
  } catch(error){
    console.log(error);
    yield put({type: types.REQUEST_WALLMART_DATA_ERROR, error})
  }
}

export function* watchForWallMartData(){
  const watcher = yield takeLatest(types.REQUEST_WALLMART_DATA, getData);
}
